name: Sync Docker Images AliYun
on:
  schedule:
    - cron: '0 0 * * 5'  # 每周五 00:00 UTC 执行任务
  workflow_dispatch:  # 允许手动触发同步

jobs:
  # 定义任务
  sync:
    runs-on: ubuntu-latest  # 运行在 Ubuntu Linux环境上
    env:
      ALIYUN_USERNAME: ${{ secrets.ALIYUN_USERNAME }}
      ALIYUN_PASSWORD: ${{ secrets.ALIYUN_PASSWORD }}
      ALIYUN_REGISTRY: ${{ vars.ALIYUN_REGISTRY }}  # 从 GitHub 环境变量获取阿里云容器镜像服务地址
      IMAGE_REPO: ${{ vars.IMAGE_REPO }}  # 从 GitHub 环境变量获取镜像库名
      IMAGES: ${{ vars.IMAGES }}  # 从 GitHub 环境变量获取镜像列表

    # 定义动作
    steps:
      - name: 1.代码检出
        uses: actions/checkout@v4

      - name: 2.登录阿里云容器镜像服务
        run: |
          echo "登录阿里云注册中心"
          docker login --username=$ALIYUN_USERNAME --password=$ALIYUN_PASSWORD $ALIYUN_REGISTRY
        continue-on-error: false  # 确保登录失败时终止流程

      - name: 3.同步Docker镜像到阿里云
        run: |
          # 循环处理每个镜像
          for IMAGE in "${IMAGES[@]}"; do
            echo "拉取镜像: $IMAGE"
            docker pull $IMAGE || { echo "拉取镜像失败: $IMAGE"; exit 1; }
          
            # 打标签并推送到阿里云
            TAGGED_IMAGE="${ALIYUN_REGISTRY}/${IMAGE_REPO}/$(basename $IMAGE)"
            echo "标记镜像: $IMAGE as $TAGGED_IMAGE"
            docker tag $IMAGE $TAGGED_IMAGE || { echo "无法标记图像: $IMAGE"; exit 1; }
          
            echo "推送镜像: $TAGGED_IMAGE"
            docker push $TAGGED_IMAGE || { echo "推送镜像失败: $TAGGED_IMAGE"; exit 1; }
          done

      - name: 4.查看本地镜像
        run: |
          echo "查看本地镜像列表"
          docker images

      - name: 5.查看远程镜像
        run: |
          echo "查看本地镜像列表"
          docker search $ALIYUN_REGISTRY/${IMAGE_REPO}
